name: Deploy to Hostinger VPS with Docker

on:
  pull_request:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Copy SSL Certificates from VPS to GitHub Release
        uses: appleboy/ssh-action@master
        with:
          host: 149.100.156.79
          username: root
          key: ${{ secrets.SSH }}
          script: |
            # Create a tarball of the SSL certificates
            tar -czf /tmp/ssl-certificates.tar.gz -C /etc/letsencrypt/live/plsvoldoende.nl .

            # Upload the tarball as a release asset
            gh release create "$GITHUB_RUN_ID" /tmp/ssl-certificates.tar.gz -t "SSL Certificates" -n "SSL Certificates for $GITHUB_RUN_ID"

      - name: Download SSL Certificates from GitHub Release
        run: |
          asset_url=$(gh release view "$GITHUB_RUN_ID" --json assets[0].browser_download_url -q .)
          curl -L -o ssl-certificates.tar.gz "$asset_url"
          mkdir -p ssl-certificates
          tar -xzf ssl-certificates.tar.gz -C ssl-certificates

      - name: Check SSL Certificates Directory
        run: |
          echo "SSL Certificates Directory Path: $(pwd)/ssl-certificates"
          ls -R ./ssl-certificates

      - name: Build Angular Frontend
        run: |
          npm install
          npm run build -- --prod
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ipwrcfrontend .

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build Docker Image with SSL Certificates
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ipwrcfrontend:with-ssl .
          docker push ${{ secrets.DOCKER_USERNAME }}/ipwrcfrontend:with-ssl

      - name: Deploy to Hostinger VPS
        uses: appleboy/ssh-action@master
        with:
          host: 149.100.156.79
          username: root
          key: ${{ secrets.SSH }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASS }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/ipwrcfrontend:with-ssl
            docker stop ipwrcfrontend || true
            docker rm ipwrcfrontend || true
            docker run -d -p 80:80 -p 443:443 --name ipwrcfrontend ${{ secrets.DOCKER_USERNAME }}/ipwrcfrontend:with-ssl
